<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ytsssss.collaborationblog.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.ytsssss.collaborationblog.domain.Blog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_comment" jdbcType="INTEGER" property="isComment" />
    <result column="is_public" jdbcType="INTEGER" property="isPublic" />
    <result column="read_time" jdbcType="BIGINT" property="readTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="precontent" jdbcType="VARCHAR" property="precontent"/>
  </resultMap>
  <resultMap id="SearchResultMap" type="com.ytsssss.collaborationblog.vo.BlogManageVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="read_time" jdbcType="BIGINT" property="readTime" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="name" jdbcType="VARCHAR" property="userName"/>
    <result column="precontent" jdbcType="VARCHAR" property="precontent"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, content, create_time, is_comment, is_public, read_time, status, update_time, 
    user_id, img, title, precontent
  </sql>
  <select id="selectByExample" parameterType="com.ytsssss.collaborationblog.example.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ytsssss.collaborationblog.example.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ytsssss.collaborationblog.domain.Blog">
    insert into blog (id, content, create_time, 
      is_comment, is_public, read_time, 
      status, update_time, user_id, img, title, precontent
      )
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isComment,jdbcType=INTEGER}, #{isPublic,jdbcType=INTEGER}, #{readTime,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT},
      #{img,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{precontent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ytsssss.collaborationblog.domain.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isComment != null">
        is_comment,
      </if>
      <if test="isPublic != null">
        is_public,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="precontent != null">
        precontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isComment != null">
        #{isComment,jdbcType=INTEGER},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="precontent != null">
        #{precontent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ytsssss.collaborationblog.example.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isComment != null">
        is_comment = #{record.isComment,jdbcType=INTEGER},
      </if>
      <if test="record.isPublic != null">
        is_public = #{record.isPublic,jdbcType=INTEGER},
      </if>
      <if test="record.readTime != null">
        read_time = #{record.readTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set id = #{record.id,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_comment = #{record.isComment,jdbcType=INTEGER},
      is_public = #{record.isPublic,jdbcType=INTEGER},
      read_time = #{record.readTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ytsssss.collaborationblog.domain.Blog">
    update blog
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isComment != null">
        is_comment = #{isComment,jdbcType=INTEGER},
      </if>
      <if test="isPublic != null">
        is_public = #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="precontent != null">
        precontent = #{precontent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ytsssss.collaborationblog.domain.Blog">
    update blog
    set content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_comment = #{isComment,jdbcType=INTEGER},
      is_public = #{isPublic,jdbcType=INTEGER},
      read_time = #{readTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      img = #{img,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      precontent = #{precontent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getMyBlogList" parameterType="java.lang.Long" resultType="java.lang.Long">
    select id
    from blog
    where user_id = #{userId,jdbcType=BIGINT} and status = 0
  </select>
  <select id="getPublicBlogList" parameterType="java.lang.Long" resultType="java.lang.Long">
    select id
    from blog
    where is_public = 0 and status = 0 and user_id != #{userId,jdbcType=BIGINT}
  </select>
  <select id="getFriendBlogList" parameterType="java.lang.Long" resultType="java.lang.Long">
    select blog_id
    from user_role_relation
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="getDraftBlogList" parameterType="java.lang.Long" resultType="java.lang.Long">
    select id
    from blog
    where user_id = #{userId,jdbcType=BIGINT} and status = 1
  </select>

  <select id="getBlogListByIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from blog
    where id in
    <foreach collection="blogIdList" index="index" item="blogId" open="(" separator="," close=")">
    #{blogId, jdbcType=BIGINT}
  </foreach>
  </select>

  <select id="searchBlogByTitle" resultMap="SearchResultMap">
    select id, title, user_id, read_time, create_time
    from blog
    where title like "%"#{title, jdbcType=VARCHAR}"%" and status = 0 and user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="searchBlogByName" resultMap="SearchResultMap">
    select blog.id as id, blog.title as title, blog.user_id as user_id,
    blog.read_time as read_time, blog.create_time as create_time, user.name as name
    from blog
    left join user on blog.user_id = user.id
    where user.name like "%"#{userName, jdbcType=VARCHAR}"%" and status = 0 and blog.user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="getBlogCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(*)
    from blog
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  
  <select id="getHotBlogList" resultMap="BaseResultMap">
    select id, title, read_time
    from blog
    where <![CDATA[DATE_SUB(CURDATE(), INTERVAL 7 DAY)<=create_time]]>
    order by read_time DESC
    limit 5 offset 0
  </select>
</mapper>